"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema Stage:
    """
    Stage is an API that describes the staged change of a resource

    Attributes
    ----------
    apiVersion : str, default is "kwok.x-k8s.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Stage", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KwokxK8sIoV1alpha1StageSpec, default is Undefined, required
        spec
    status : KwokxK8sIoV1alpha1StageStatus, default is Undefined, optional
        status
    """


    apiVersion: "kwok.x-k8s.io/v1alpha1" = "kwok.x-k8s.io/v1alpha1"

    kind: "Stage" = "Stage"

    metadata?: v1.ObjectMeta

    spec: KwokxK8sIoV1alpha1StageSpec

    status?: KwokxK8sIoV1alpha1StageStatus


schema KwokxK8sIoV1alpha1StageSpec:
    """
    Spec holds information about the request being evaluated.

    Attributes
    ----------
    immediateNextStage : bool, default is Undefined, optional
        ImmediateNextStage means that the next stage of matching is performed immediately, without waiting for the Apiserver to push.
    weight : int, default is Undefined, optional
        Weight means when multiple stages share the same ResourceRef and Selector,
        a random stage will be matched as the next stage based on the weight.
    delay : KwokxK8sIoV1alpha1StageSpecDelay, default is Undefined, optional
        delay
    next : KwokxK8sIoV1alpha1StageSpecNext, default is Undefined, required
        next
    resourceRef : KwokxK8sIoV1alpha1StageSpecResourceRef, default is Undefined, required
        resource ref
    selector : KwokxK8sIoV1alpha1StageSpecSelector, default is Undefined, optional
        selector
    weightFrom : KwokxK8sIoV1alpha1StageSpecWeightFrom, default is Undefined, optional
        weight from
    """


    immediateNextStage?: bool

    weight?: int = 0

    delay?: KwokxK8sIoV1alpha1StageSpecDelay

    next: KwokxK8sIoV1alpha1StageSpecNext

    resourceRef: KwokxK8sIoV1alpha1StageSpecResourceRef

    selector?: KwokxK8sIoV1alpha1StageSpecSelector

    weightFrom?: KwokxK8sIoV1alpha1StageSpecWeightFrom


    check:
        weight >= 0 if weight not in [None, Undefined]


schema KwokxK8sIoV1alpha1StageSpecDelay:
    """
    Delay means there is a delay in this stage.

    Attributes
    ----------
    durationMilliseconds : int, default is Undefined, optional
        DurationMilliseconds indicates the stage delay time.
        If JitterDurationMilliseconds is less than DurationMilliseconds, then JitterDurationMilliseconds is used.
    jitterDurationMilliseconds : int, default is Undefined, optional
        JitterDurationMilliseconds is the duration plus an additional amount chosen uniformly
        at random from the interval between DurationMilliseconds and JitterDurationMilliseconds.
    durationFrom : KwokxK8sIoV1alpha1StageSpecDelayDurationFrom, default is Undefined, optional
        duration from
    jitterDurationFrom : KwokxK8sIoV1alpha1StageSpecDelayJitterDurationFrom, default is Undefined, optional
        jitter duration from
    """


    durationMilliseconds?: int

    jitterDurationMilliseconds?: int

    durationFrom?: KwokxK8sIoV1alpha1StageSpecDelayDurationFrom

    jitterDurationFrom?: KwokxK8sIoV1alpha1StageSpecDelayJitterDurationFrom


    check:
        durationMilliseconds >= 0 if durationMilliseconds not in [None, Undefined]
        jitterDurationMilliseconds >= 0 if jitterDurationMilliseconds not in [None, Undefined]


schema KwokxK8sIoV1alpha1StageSpecDelayDurationFrom:
    """
    DurationFrom is the expression used to get the value.
    If it is a time.Time type, getting the value will be minus time.Now() to get DurationMilliseconds
    If it is a string type, the value get will be parsed by time.ParseDuration.

    Attributes
    ----------
    expressionFrom : str, default is Undefined, optional
        ExpressionFrom is the expression used to get the value.
    """


    expressionFrom?: str


schema KwokxK8sIoV1alpha1StageSpecDelayJitterDurationFrom:
    """
    JitterDurationFrom is the expression used to get the value.
    If it is a time.Time type, getting the value will be minus time.Now() to get JitterDurationMilliseconds
    If it is a string type, the value get will be parsed by time.ParseDuration.

    Attributes
    ----------
    expressionFrom : str, default is Undefined, optional
        ExpressionFrom is the expression used to get the value.
    """


    expressionFrom?: str


schema KwokxK8sIoV1alpha1StageSpecNext:
    """
    Next indicates that this stage will be moved to.

    Attributes
    ----------
    delete : bool, default is Undefined, optional
        Delete means that the resource will be deleted if true.
    patches : [KwokxK8sIoV1alpha1StageSpecNextPatchesItems0], default is Undefined, optional
        Patches means that the resource will be patched.
    statusSubresource : str, default is "status", optional
        StatusSubresource indicates the name of the subresource that will be patched. The support for
        this field is not available in Pod and Node resources.
        Deprecated: Use Patches instead.
    statusTemplate : str, default is Undefined, optional
        StatusTemplate indicates the template for modifying the status of the resource in the next.
        Deprecated: Use Patches instead.
    event : KwokxK8sIoV1alpha1StageSpecNextEvent, default is Undefined, optional
        event
    finalizers : KwokxK8sIoV1alpha1StageSpecNextFinalizers, default is Undefined, optional
        finalizers
    statusPatchAs : KwokxK8sIoV1alpha1StageSpecNextStatusPatchAs, default is Undefined, optional
        status patch as
    """


    delete?: bool

    patches?: [KwokxK8sIoV1alpha1StageSpecNextPatchesItems0]

    statusSubresource?: str = "status"

    statusTemplate?: str

    event?: KwokxK8sIoV1alpha1StageSpecNextEvent

    finalizers?: KwokxK8sIoV1alpha1StageSpecNextFinalizers

    statusPatchAs?: KwokxK8sIoV1alpha1StageSpecNextStatusPatchAs


schema KwokxK8sIoV1alpha1StageSpecNextEvent:
    """
    Event means that an event will be sent.

    Attributes
    ----------
    message : str, default is Undefined, optional
        Message is a human-readable description of the status of this operation.
    reason : str, default is Undefined, optional
        Reason is why the action was taken. It is human-readable.
    $type : str, default is Undefined, optional
        Type is the type of this event (Normal, Warning), It is machine-readable.
    """


    message?: str

    reason?: str

    $type?: str


schema KwokxK8sIoV1alpha1StageSpecNextFinalizers:
    """
    Finalizers means that finalizers will be modified.

    Attributes
    ----------
    add : [KwokxK8sIoV1alpha1StageSpecNextFinalizersAddItems0], default is Undefined, optional
        Add means that the Finalizers will be added to the resource.
    empty : bool, default is Undefined, optional
        Empty means that the Finalizers for that resource will be emptied.
    remove : [KwokxK8sIoV1alpha1StageSpecNextFinalizersRemoveItems0], default is Undefined, optional
        Remove means that the Finalizers will be removed from the resource.
    """


    add?: [KwokxK8sIoV1alpha1StageSpecNextFinalizersAddItems0]

    empty?: bool

    remove?: [KwokxK8sIoV1alpha1StageSpecNextFinalizersRemoveItems0]


schema KwokxK8sIoV1alpha1StageSpecNextFinalizersAddItems0:
    """
    FinalizerItem  describes the one of the finalizers.

    Attributes
    ----------
    value : str, default is Undefined, optional
        Value is the value of the finalizer.
    """


    value?: str


schema KwokxK8sIoV1alpha1StageSpecNextFinalizersRemoveItems0:
    """
    FinalizerItem  describes the one of the finalizers.

    Attributes
    ----------
    value : str, default is Undefined, optional
        Value is the value of the finalizer.
    """


    value?: str


schema KwokxK8sIoV1alpha1StageSpecNextPatchesItems0:
    """
    StagePatch describes the patch for the resource.

    Attributes
    ----------
    impersonation : KwokxK8sIoV1alpha1StageSpecNextPatchesItems0Impersonation, default is Undefined, optional
        impersonation
    root : str, default is Undefined, optional
        Root indicates the root of the template calculated by the patch.
    subresource : str, default is Undefined, optional
        Subresource indicates the name of the subresource that will be patched.
    template : str, default is Undefined, optional
        Template indicates the template for modifying the resource in the next.
    $type : str, default is Undefined, optional
        Type indicates the type of the patch.
    """


    impersonation?: KwokxK8sIoV1alpha1StageSpecNextPatchesItems0Impersonation

    root?: str

    subresource?: str

    template?: str

    $type?: "json" | "merge" | "strategic"


schema KwokxK8sIoV1alpha1StageSpecNextPatchesItems0Impersonation:
    """
    Impersonation indicates the impersonating configuration for client when patching status.
    In most cases this will be empty, in which case the default client service account will be used.
    When this is not empty, a corresponding rbac change is required to grant `impersonate` privilege.
    The support for this field is not available in Pod and Node resources.

    Attributes
    ----------
    username : str, default is Undefined, required
        Username the target username for the client to impersonate
    """


    username: str


schema KwokxK8sIoV1alpha1StageSpecNextStatusPatchAs:
    """
    StatusPatchAs indicates the impersonating configuration for client when patching status.
    In most cases this will be empty, in which case the default client service account will be used.
    When this is not empty, a corresponding rbac change is required to grant `impersonate` privilege.
    The support for this field is not available in Pod and Node resources.
    Deprecated: Use Patches instead.

    Attributes
    ----------
    username : str, default is Undefined, required
        Username the target username for the client to impersonate
    """


    username: str


schema KwokxK8sIoV1alpha1StageSpecResourceRef:
    """
    ResourceRef specifies the Kind and version of the resource.

    Attributes
    ----------
    apiGroup : str, default is "v1", optional
        APIGroup of the referent.
    kind : str, default is Undefined, required
        Kind of the referent.
    """


    apiGroup?: str = "v1"

    kind: str


schema KwokxK8sIoV1alpha1StageSpecSelector:
    """
    Selector specifies the stags will be applied to the selected resource.

    Attributes
    ----------
    matchAnnotations : {str:str}, default is Undefined, optional
        MatchAnnotations is a map of {key,value} pairs. A single {key,value} in the matchAnnotations
        map is equivalent to an element of matchExpressions, whose key field is ".metadata.annotations[key]", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    matchExpressions : [KwokxK8sIoV1alpha1StageSpecSelectorMatchExpressionsItems0], default is Undefined, optional
        MatchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is ".metadata.labels[key]", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchAnnotations?: {str:str}

    matchExpressions?: [KwokxK8sIoV1alpha1StageSpecSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KwokxK8sIoV1alpha1StageSpecSelectorMatchExpressionsItems0:
    """
    SelectorRequirement is a resource selector requirement is a selector that contains values, a key,
    and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The name of the scope that the selector applies to.
    operator : str, default is Undefined, required
        Represents a scope's relationship to a set of values.
    values : [str], default is Undefined, optional
        An array of string values.
        If the operator is In, NotIn, Intersection or NotIntersection, the values array must be non-empty.
        If the operator is Exists or DoesNotExist, the values array must be empty.
    """


    key: str

    operator: str

    values?: [str]


schema KwokxK8sIoV1alpha1StageSpecWeightFrom:
    """
    WeightFrom means is the expression used to get the value.
    If it is a number type, convert to int.
    If it is a string type, the value get will be parsed by strconv.ParseInt.

    Attributes
    ----------
    expressionFrom : str, default is Undefined, optional
        ExpressionFrom is the expression used to get the value.
    """


    expressionFrom?: str


schema KwokxK8sIoV1alpha1StageStatus:
    """
    Status holds status for the Stage

    Attributes
    ----------
    conditions : [KwokxK8sIoV1alpha1StageStatusConditionsItems0], default is Undefined, optional
        Conditions holds conditions for the Stage.
    """


    conditions?: [KwokxK8sIoV1alpha1StageStatusConditionsItems0]


schema KwokxK8sIoV1alpha1StageStatusConditionsItems0:
    """
    Condition contains details for one aspect of the current state of this API Resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        Message is a human readable message indicating details about the transition.
        This may be an empty string.
    reason : str, default is Undefined, required
        Reason contains a programmatic identifier indicating the reason for the condition's last transition.
        Producers of specific condition types may define expected values and meanings for this field,
        and whether the values are considered a guaranteed API.
        The value should be a CamelCase string.
        This field may not be empty.
    status : str, default is Undefined, required
        Status of the condition
    $type : str, default is Undefined, required
        Type of condition in CamelCase or in foo.example.com/CamelCase.
        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
        useful (see .node.status.conditions), the ability to deconflict is important.
        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
    """


    lastTransitionTime: str

    message: str

    reason: str

    status: str

    $type: str


    check:
        len(message) <= 32768
        len(reason) <= 1024
        len(reason) >= 1
        _regex_match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        _regex_match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")


