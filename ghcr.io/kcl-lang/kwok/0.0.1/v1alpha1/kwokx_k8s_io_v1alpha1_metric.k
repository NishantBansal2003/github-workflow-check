"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema Metric:
    """
    Metric provides metrics configuration.

    Attributes
    ----------
    apiVersion : str, default is "kwok.x-k8s.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Metric", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, required
        metadata
    spec : KwokxK8sIoV1alpha1MetricSpec, default is Undefined, required
        spec
    status : KwokxK8sIoV1alpha1MetricStatus, default is Undefined, optional
        status
    """


    apiVersion: "kwok.x-k8s.io/v1alpha1" = "kwok.x-k8s.io/v1alpha1"

    kind: "Metric" = "Metric"

    metadata: v1.ObjectMeta

    spec: KwokxK8sIoV1alpha1MetricSpec

    status?: KwokxK8sIoV1alpha1MetricStatus


schema KwokxK8sIoV1alpha1MetricSpec:
    """
    Spec holds spec for metrics.

    Attributes
    ----------
    metrics : [KwokxK8sIoV1alpha1MetricSpecMetricsItems0], default is Undefined, required
        Metrics is a list of metric configurations.
    path : str, default is Undefined, required
        Path is a restful service path.
    """


    metrics: [KwokxK8sIoV1alpha1MetricSpecMetricsItems0]

    path: str


    check:
        len(path) >= 1


schema KwokxK8sIoV1alpha1MetricSpecMetricsItems0:
    """
    MetricConfig provides metric configuration to a single metric

    Attributes
    ----------
    buckets : [KwokxK8sIoV1alpha1MetricSpecMetricsItems0BucketsItems0], default is Undefined, optional
        Buckets is a list of buckets for a histogram metric.
    dimension : str, default is Undefined, optional
        Dimension is a dimension of the metric.
    help : str, default is Undefined, optional
        Help provides information about this metric.
    kind : str, default is Undefined, required
        Kind is kind of metric
    labels : [KwokxK8sIoV1alpha1MetricSpecMetricsItems0LabelsItems0], default is Undefined, optional
        Labels are metric labels.
    name : str, default is Undefined, required
        Name is the fully-qualified name of the metric.
    value : str, default is Undefined, optional
        Value is a CEL expression.
    """


    buckets?: [KwokxK8sIoV1alpha1MetricSpecMetricsItems0BucketsItems0]

    dimension?: str

    help?: str

    kind: "counter" | "gauge" | "histogram"

    labels?: [KwokxK8sIoV1alpha1MetricSpecMetricsItems0LabelsItems0]

    name: str

    value?: str


    check:
        len(name) >= 1


schema KwokxK8sIoV1alpha1MetricSpecMetricsItems0BucketsItems0:
    """
    MetricBucket is a single bucket for a metric.

    Attributes
    ----------
    hidden : bool, default is Undefined, optional
        Hidden is means that this bucket not shown in the metric.
        but value will be calculated and cumulative into the next bucket.
    le : float, default is Undefined, required
        Le is less-than or equal.
    value : str, default is Undefined, required
        Value is a CEL expression.
    """


    hidden?: bool

    le: float

    value: str


    check:
        le >= 0


schema KwokxK8sIoV1alpha1MetricSpecMetricsItems0LabelsItems0:
    """
    MetricLabel holds label name and the value of the label.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name is a label name.
    value : str, default is Undefined, required
        Value is a CEL expression.
    """


    name: str

    value: str


    check:
        len(name) >= 1
        len(value) >= 1


schema KwokxK8sIoV1alpha1MetricStatus:
    """
    Status holds status for metrics

    Attributes
    ----------
    conditions : [KwokxK8sIoV1alpha1MetricStatusConditionsItems0], default is Undefined, optional
        Conditions holds conditions for metrics.
    """


    conditions?: [KwokxK8sIoV1alpha1MetricStatusConditionsItems0]


schema KwokxK8sIoV1alpha1MetricStatusConditionsItems0:
    """
    Condition contains details for one aspect of the current state of this API Resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time the condition transitioned from one status to another.
        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        Message is a human readable message indicating details about the transition.
        This may be an empty string.
    reason : str, default is Undefined, required
        Reason contains a programmatic identifier indicating the reason for the condition's last transition.
        Producers of specific condition types may define expected values and meanings for this field,
        and whether the values are considered a guaranteed API.
        The value should be a CamelCase string.
        This field may not be empty.
    status : str, default is Undefined, required
        Status of the condition
    $type : str, default is Undefined, required
        Type of condition in CamelCase or in foo.example.com/CamelCase.
        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
        useful (see .node.status.conditions), the ability to deconflict is important.
        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
    """


    lastTransitionTime: str

    message: str

    reason: str

    status: str

    $type: str


    check:
        len(message) <= 32768
        len(reason) <= 1024
        len(reason) >= 1
        _regex_match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        _regex_match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")


